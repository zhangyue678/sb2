# ########################################
# Emotion recognition from speech using ECAPA-TDNN
# (smaller version with layer sizes and number
# of attention heads divided by 2 compared to original)
#
#  * Authors: Hwidong Na & Mirco Ravanelli
#  * Modified by Pierre-Yves Yanni
# ########################################

# Seed needs to be set at top of yaml, before objects with parameters are made
seed: 1969
__set_seed: !apply:torch.manual_seed [!ref <seed>]

# Dataset will be downloaded to the `data_original`
data_original: /data2/home/dataset/iemocap/IEMOCAP_full_release/Session
# Data prepare function will create a modified dataset with structured data
data_folder: /data2/home/dataset/iemocap/IEMOCAP_nlp_ahsn_leave-two-speaker-out
output_folder: !ref results/Bert/<seed>
save_folder: !ref <output_folder>/save
train_log: !ref <output_folder>/train_log.txt


# different speakers for train, valid and test sets
# (more challenging exercise: higher error rate)
different_speakers: False

# Path where data manifest files will be stored
train_annotation: !ref <output_folder>/train.json
valid_annotation: !ref <output_folder>/valid.json
test_annotation: !ref <output_folder>/test.json

# The train logger writes training statistics to a file, as well as stdout.
train_logger: !new:speechbrain.utils.train_logger.FileTrainLogger
    save_file: !ref <train_log>

error_stats: !name:speechbrain.utils.metric_stats.MetricStats
    metric: !name:speechbrain.nnet.losses.classification_error
        reduction: batch

ckpt_interval_minutes: 15 # save checkpoint every N min

# Training Parameters
number_of_epochs: 30
batch_size: 8
gradient_accumulation: 2
lr: 0.0001
weight_decay: 0.00002
base_lr: 0.000001
max_lr: !ref <lr>
step_size: 2212  # 4 times number of iterations/epoch (2 to 10 is suggested)
mode: exp_range # mode of learning rate schedule (triangular, triangular2, exp_range)
gamma: 0.9998  # divides learning rate by 3 over the first 20 epochs
sample_rate: 16000
shuffle: True
random_chunk: True
drop_last: False

out_n_neurons: 4 # (anger, happiness, sadness, neutral)

dataloader_options:
    batch_size: !ref <batch_size>
    shuffle: !ref <shuffle>
    num_workers: 8  # 2 on linux but 0 works on windows
    drop_last: !ref <drop_last>

pretreate: !new:speechbrain.lobes.pretreate.pretreate

output_model: !new:speechbrain.lobes.models.BertPretrain.BertPretrain
    model_name: bert-base-uncased

epoch_counter: !new:speechbrain.utils.epoch_loop.EpochCounter
    limit: !ref <number_of_epochs>

augment_wavedrop: !new:speechbrain.lobes.augment.TimeDomainSpecAugment
    sample_rate: !ref <sample_rate>
    speeds: [100]

augment_speed: !new:speechbrain.lobes.augment.TimeDomainSpecAugment
    sample_rate: !ref <sample_rate>
    speeds: [95, 100, 105]

augment_pipeline: [
    !ref <augment_wavedrop>,
    !ref <augment_speed>,
]
concat_augment: True

mean_var_norm: !new:speechbrain.processing.features.InputNormalization
    norm_type: sentence
    std_norm: False

modules:
    pretreate: !ref <pretreate>
    output_model: !ref <output_model>
    mean_var_norm: !ref <mean_var_norm>

compute_cost: !new:speechbrain.nnet.losses.LogSoftmaxWrapper
    loss_fn: !new:speechbrain.nnet.losses.AdditiveAngularMargin
        margin: 0.2
        scale: 30

compute_error: !name:speechbrain.nnet.losses.classification_error

opt_class: !name:torch.optim.Adam
    lr: !ref <lr>
    weight_decay: !ref <weight_decay>

lr_annealing: !new:speechbrain.nnet.schedulers.CyclicLRScheduler
    mode: !ref <mode>
    gamma: !ref <gamma>
    base_lr: !ref <base_lr>
    max_lr: !ref <max_lr>
    step_size: !ref <step_size>

checkpointer: !new:speechbrain.utils.checkpoints.Checkpointer
    checkpoints_dir: !ref <save_folder>
    recoverables:
        output_model: !ref <output_model>
        normalizer: !ref <mean_var_norm>
        counter: !ref <epoch_counter>
